I don't think it requires a very complex algorithm per se but it does need some smart thinking. All you need is a data structure similar to a LRU Cache

along with (lot of) modifications.

This is how the WhatsApp recently used smileys probably works:

    Each smiley when it is sent, is added to the cache if it doesn't already exist in the cache.
    Every smiley entered is assigned a score - say, some number. This number determines its lifetime in the Recently Used List (RUL). When this number reaches some minimum threshold (zero, for example), it's removed from the list.
    When a smiley which is already present in the RUL is sent again, it's score is incremented by some value (one, for example) and the score of other smileys in the RUL is decreased by that same value.*
    Every new** smiley is assigned a score which is substantially higher than the minimum threshold.

Do keep in mind, what I have outlined might be making the problem trivial or too complex. This answer maybe wrong.
